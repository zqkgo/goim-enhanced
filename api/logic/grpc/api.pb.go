// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api.proto

package grpc

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	grpc "github.com/zqkgo/goim-enhanced/api/comet/grpc"
	grpc1 "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type PushMsgType int32

const (
	PushMsgType_PUSH      PushMsgType = 0
	PushMsgType_ROOM      PushMsgType = 1
	PushMsgType_BROADCAST PushMsgType = 2
)

var PushMsgType_name = map[int32]string{
	0: "PUSH",
	1: "ROOM",
	2: "BROADCAST",
}

var PushMsgType_value = map[string]int32{
	"PUSH":      0,
	"ROOM":      1,
	"BROADCAST": 2,
}

func (x PushMsgType) String() string {
	return proto.EnumName(PushMsgType_name, int32(x))
}

func (PushMsgType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

type PushMsg struct {
	Type                 PushMsgType `protobuf:"varint,1,opt,name=type,proto3,enum=goim.logic.PushMsgType" json:"type,omitempty"`
	Operation            int32       `protobuf:"varint,2,opt,name=operation,proto3" json:"operation,omitempty"`
	Speed                int32       `protobuf:"varint,3,opt,name=speed,proto3" json:"speed,omitempty"`
	Server               string      `protobuf:"bytes,4,opt,name=server,proto3" json:"server,omitempty"`
	Room                 string      `protobuf:"bytes,5,opt,name=room,proto3" json:"room,omitempty"`
	Keys                 []string    `protobuf:"bytes,6,rep,name=keys,proto3" json:"keys,omitempty"`
	Msg                  []byte      `protobuf:"bytes,7,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PushMsg) Reset()         { *m = PushMsg{} }
func (m *PushMsg) String() string { return proto.CompactTextString(m) }
func (*PushMsg) ProtoMessage()    {}
func (*PushMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}
func (m *PushMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushMsg.Unmarshal(m, b)
}
func (m *PushMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushMsg.Marshal(b, m, deterministic)
}
func (m *PushMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushMsg.Merge(m, src)
}
func (m *PushMsg) XXX_Size() int {
	return xxx_messageInfo_PushMsg.Size(m)
}
func (m *PushMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_PushMsg.DiscardUnknown(m)
}

var xxx_messageInfo_PushMsg proto.InternalMessageInfo

func (m *PushMsg) GetType() PushMsgType {
	if m != nil {
		return m.Type
	}
	return PushMsgType_PUSH
}

func (m *PushMsg) GetOperation() int32 {
	if m != nil {
		return m.Operation
	}
	return 0
}

func (m *PushMsg) GetSpeed() int32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *PushMsg) GetServer() string {
	if m != nil {
		return m.Server
	}
	return ""
}

func (m *PushMsg) GetRoom() string {
	if m != nil {
		return m.Room
	}
	return ""
}

func (m *PushMsg) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *PushMsg) GetMsg() []byte {
	if m != nil {
		return m.Msg
	}
	return nil
}

type CloseReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseReply) Reset()         { *m = CloseReply{} }
func (m *CloseReply) String() string { return proto.CompactTextString(m) }
func (*CloseReply) ProtoMessage()    {}
func (*CloseReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}
func (m *CloseReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseReply.Unmarshal(m, b)
}
func (m *CloseReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseReply.Marshal(b, m, deterministic)
}
func (m *CloseReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseReply.Merge(m, src)
}
func (m *CloseReply) XXX_Size() int {
	return xxx_messageInfo_CloseReply.Size(m)
}
func (m *CloseReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseReply.DiscardUnknown(m)
}

var xxx_messageInfo_CloseReply proto.InternalMessageInfo

type CloseReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseReq) Reset()         { *m = CloseReq{} }
func (m *CloseReq) String() string { return proto.CompactTextString(m) }
func (*CloseReq) ProtoMessage()    {}
func (*CloseReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}
func (m *CloseReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseReq.Unmarshal(m, b)
}
func (m *CloseReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseReq.Marshal(b, m, deterministic)
}
func (m *CloseReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseReq.Merge(m, src)
}
func (m *CloseReq) XXX_Size() int {
	return xxx_messageInfo_CloseReq.Size(m)
}
func (m *CloseReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseReq.DiscardUnknown(m)
}

var xxx_messageInfo_CloseReq proto.InternalMessageInfo

type PingReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingReply) Reset()         { *m = PingReply{} }
func (m *PingReply) String() string { return proto.CompactTextString(m) }
func (*PingReply) ProtoMessage()    {}
func (*PingReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}
func (m *PingReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingReply.Unmarshal(m, b)
}
func (m *PingReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingReply.Marshal(b, m, deterministic)
}
func (m *PingReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingReply.Merge(m, src)
}
func (m *PingReply) XXX_Size() int {
	return xxx_messageInfo_PingReply.Size(m)
}
func (m *PingReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PingReply.DiscardUnknown(m)
}

var xxx_messageInfo_PingReply proto.InternalMessageInfo

type PingReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingReq) Reset()         { *m = PingReq{} }
func (m *PingReq) String() string { return proto.CompactTextString(m) }
func (*PingReq) ProtoMessage()    {}
func (*PingReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{4}
}
func (m *PingReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingReq.Unmarshal(m, b)
}
func (m *PingReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingReq.Marshal(b, m, deterministic)
}
func (m *PingReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingReq.Merge(m, src)
}
func (m *PingReq) XXX_Size() int {
	return xxx_messageInfo_PingReq.Size(m)
}
func (m *PingReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PingReq.DiscardUnknown(m)
}

var xxx_messageInfo_PingReq proto.InternalMessageInfo

type ConnectReq struct {
	Server               string   `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	Cookie               string   `protobuf:"bytes,2,opt,name=cookie,proto3" json:"cookie,omitempty"`
	Token                []byte   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectReq) Reset()      { *m = ConnectReq{} }
func (*ConnectReq) ProtoMessage() {}
func (*ConnectReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{5}
}
func (m *ConnectReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectReq.Unmarshal(m, b)
}
func (m *ConnectReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectReq.Marshal(b, m, deterministic)
}
func (m *ConnectReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectReq.Merge(m, src)
}
func (m *ConnectReq) XXX_Size() int {
	return xxx_messageInfo_ConnectReq.Size(m)
}
func (m *ConnectReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectReq.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectReq proto.InternalMessageInfo

func (m *ConnectReq) GetServer() string {
	if m != nil {
		return m.Server
	}
	return ""
}

func (m *ConnectReq) GetCookie() string {
	if m != nil {
		return m.Cookie
	}
	return ""
}

func (m *ConnectReq) GetToken() []byte {
	if m != nil {
		return m.Token
	}
	return nil
}

type ConnectReply struct {
	Mid                  int64    `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	RoomID               string   `protobuf:"bytes,3,opt,name=roomID,proto3" json:"roomID,omitempty"`
	Accepts              []int32  `protobuf:"varint,4,rep,packed,name=accepts,proto3" json:"accepts,omitempty"`
	Heartbeat            int64    `protobuf:"varint,5,opt,name=heartbeat,proto3" json:"heartbeat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectReply) Reset()         { *m = ConnectReply{} }
func (m *ConnectReply) String() string { return proto.CompactTextString(m) }
func (*ConnectReply) ProtoMessage()    {}
func (*ConnectReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{6}
}
func (m *ConnectReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectReply.Unmarshal(m, b)
}
func (m *ConnectReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectReply.Marshal(b, m, deterministic)
}
func (m *ConnectReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectReply.Merge(m, src)
}
func (m *ConnectReply) XXX_Size() int {
	return xxx_messageInfo_ConnectReply.Size(m)
}
func (m *ConnectReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectReply.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectReply proto.InternalMessageInfo

func (m *ConnectReply) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

func (m *ConnectReply) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ConnectReply) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

func (m *ConnectReply) GetAccepts() []int32 {
	if m != nil {
		return m.Accepts
	}
	return nil
}

func (m *ConnectReply) GetHeartbeat() int64 {
	if m != nil {
		return m.Heartbeat
	}
	return 0
}

type DisconnectReq struct {
	Mid                  int64    `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Server               string   `protobuf:"bytes,3,opt,name=server,proto3" json:"server,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisconnectReq) Reset()         { *m = DisconnectReq{} }
func (m *DisconnectReq) String() string { return proto.CompactTextString(m) }
func (*DisconnectReq) ProtoMessage()    {}
func (*DisconnectReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{7}
}
func (m *DisconnectReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisconnectReq.Unmarshal(m, b)
}
func (m *DisconnectReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisconnectReq.Marshal(b, m, deterministic)
}
func (m *DisconnectReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectReq.Merge(m, src)
}
func (m *DisconnectReq) XXX_Size() int {
	return xxx_messageInfo_DisconnectReq.Size(m)
}
func (m *DisconnectReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectReq.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectReq proto.InternalMessageInfo

func (m *DisconnectReq) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

func (m *DisconnectReq) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *DisconnectReq) GetServer() string {
	if m != nil {
		return m.Server
	}
	return ""
}

type DisconnectReply struct {
	Has                  bool     `protobuf:"varint,1,opt,name=has,proto3" json:"has,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisconnectReply) Reset()         { *m = DisconnectReply{} }
func (m *DisconnectReply) String() string { return proto.CompactTextString(m) }
func (*DisconnectReply) ProtoMessage()    {}
func (*DisconnectReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{8}
}
func (m *DisconnectReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisconnectReply.Unmarshal(m, b)
}
func (m *DisconnectReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisconnectReply.Marshal(b, m, deterministic)
}
func (m *DisconnectReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectReply.Merge(m, src)
}
func (m *DisconnectReply) XXX_Size() int {
	return xxx_messageInfo_DisconnectReply.Size(m)
}
func (m *DisconnectReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectReply.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectReply proto.InternalMessageInfo

func (m *DisconnectReply) GetHas() bool {
	if m != nil {
		return m.Has
	}
	return false
}

type HeartbeatReq struct {
	Mid                  int64    `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Server               string   `protobuf:"bytes,3,opt,name=server,proto3" json:"server,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeartbeatReq) Reset()         { *m = HeartbeatReq{} }
func (m *HeartbeatReq) String() string { return proto.CompactTextString(m) }
func (*HeartbeatReq) ProtoMessage()    {}
func (*HeartbeatReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{9}
}
func (m *HeartbeatReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartbeatReq.Unmarshal(m, b)
}
func (m *HeartbeatReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartbeatReq.Marshal(b, m, deterministic)
}
func (m *HeartbeatReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartbeatReq.Merge(m, src)
}
func (m *HeartbeatReq) XXX_Size() int {
	return xxx_messageInfo_HeartbeatReq.Size(m)
}
func (m *HeartbeatReq) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartbeatReq.DiscardUnknown(m)
}

var xxx_messageInfo_HeartbeatReq proto.InternalMessageInfo

func (m *HeartbeatReq) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

func (m *HeartbeatReq) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *HeartbeatReq) GetServer() string {
	if m != nil {
		return m.Server
	}
	return ""
}

type HeartbeatReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeartbeatReply) Reset()         { *m = HeartbeatReply{} }
func (m *HeartbeatReply) String() string { return proto.CompactTextString(m) }
func (*HeartbeatReply) ProtoMessage()    {}
func (*HeartbeatReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{10}
}
func (m *HeartbeatReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartbeatReply.Unmarshal(m, b)
}
func (m *HeartbeatReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartbeatReply.Marshal(b, m, deterministic)
}
func (m *HeartbeatReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartbeatReply.Merge(m, src)
}
func (m *HeartbeatReply) XXX_Size() int {
	return xxx_messageInfo_HeartbeatReply.Size(m)
}
func (m *HeartbeatReply) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartbeatReply.DiscardUnknown(m)
}

var xxx_messageInfo_HeartbeatReply proto.InternalMessageInfo

type OnlineReq struct {
	Server               string           `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	RoomCount            map[string]int32 `protobuf:"bytes,2,rep,name=roomCount,proto3" json:"roomCount,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *OnlineReq) Reset()      { *m = OnlineReq{} }
func (*OnlineReq) ProtoMessage() {}
func (*OnlineReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{11}
}
func (m *OnlineReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OnlineReq.Unmarshal(m, b)
}
func (m *OnlineReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OnlineReq.Marshal(b, m, deterministic)
}
func (m *OnlineReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OnlineReq.Merge(m, src)
}
func (m *OnlineReq) XXX_Size() int {
	return xxx_messageInfo_OnlineReq.Size(m)
}
func (m *OnlineReq) XXX_DiscardUnknown() {
	xxx_messageInfo_OnlineReq.DiscardUnknown(m)
}

var xxx_messageInfo_OnlineReq proto.InternalMessageInfo

func (m *OnlineReq) GetServer() string {
	if m != nil {
		return m.Server
	}
	return ""
}

func (m *OnlineReq) GetRoomCount() map[string]int32 {
	if m != nil {
		return m.RoomCount
	}
	return nil
}

type OnlineReply struct {
	AllRoomCount         map[string]int32 `protobuf:"bytes,1,rep,name=allRoomCount,proto3" json:"allRoomCount,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *OnlineReply) Reset()      { *m = OnlineReply{} }
func (*OnlineReply) ProtoMessage() {}
func (*OnlineReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{12}
}
func (m *OnlineReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OnlineReply.Unmarshal(m, b)
}
func (m *OnlineReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OnlineReply.Marshal(b, m, deterministic)
}
func (m *OnlineReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OnlineReply.Merge(m, src)
}
func (m *OnlineReply) XXX_Size() int {
	return xxx_messageInfo_OnlineReply.Size(m)
}
func (m *OnlineReply) XXX_DiscardUnknown() {
	xxx_messageInfo_OnlineReply.DiscardUnknown(m)
}

var xxx_messageInfo_OnlineReply proto.InternalMessageInfo

func (m *OnlineReply) GetAllRoomCount() map[string]int32 {
	if m != nil {
		return m.AllRoomCount
	}
	return nil
}

type ReceiveReq struct {
	Mid                  int64       `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Proto                *grpc.Proto `protobuf:"bytes,2,opt,name=proto,proto3" json:"proto,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ReceiveReq) Reset()         { *m = ReceiveReq{} }
func (m *ReceiveReq) String() string { return proto.CompactTextString(m) }
func (*ReceiveReq) ProtoMessage()    {}
func (*ReceiveReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{13}
}
func (m *ReceiveReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiveReq.Unmarshal(m, b)
}
func (m *ReceiveReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiveReq.Marshal(b, m, deterministic)
}
func (m *ReceiveReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiveReq.Merge(m, src)
}
func (m *ReceiveReq) XXX_Size() int {
	return xxx_messageInfo_ReceiveReq.Size(m)
}
func (m *ReceiveReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiveReq.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiveReq proto.InternalMessageInfo

func (m *ReceiveReq) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

func (m *ReceiveReq) GetProto() *grpc.Proto {
	if m != nil {
		return m.Proto
	}
	return nil
}

type ReceiveReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReceiveReply) Reset()         { *m = ReceiveReply{} }
func (m *ReceiveReply) String() string { return proto.CompactTextString(m) }
func (*ReceiveReply) ProtoMessage()    {}
func (*ReceiveReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{14}
}
func (m *ReceiveReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiveReply.Unmarshal(m, b)
}
func (m *ReceiveReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiveReply.Marshal(b, m, deterministic)
}
func (m *ReceiveReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiveReply.Merge(m, src)
}
func (m *ReceiveReply) XXX_Size() int {
	return xxx_messageInfo_ReceiveReply.Size(m)
}
func (m *ReceiveReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiveReply.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiveReply proto.InternalMessageInfo

type NodesReq struct {
	Platform             string   `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty"`
	ClientIP             string   `protobuf:"bytes,2,opt,name=clientIP,proto3" json:"clientIP,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodesReq) Reset()         { *m = NodesReq{} }
func (m *NodesReq) String() string { return proto.CompactTextString(m) }
func (*NodesReq) ProtoMessage()    {}
func (*NodesReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{15}
}
func (m *NodesReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodesReq.Unmarshal(m, b)
}
func (m *NodesReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodesReq.Marshal(b, m, deterministic)
}
func (m *NodesReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodesReq.Merge(m, src)
}
func (m *NodesReq) XXX_Size() int {
	return xxx_messageInfo_NodesReq.Size(m)
}
func (m *NodesReq) XXX_DiscardUnknown() {
	xxx_messageInfo_NodesReq.DiscardUnknown(m)
}

var xxx_messageInfo_NodesReq proto.InternalMessageInfo

func (m *NodesReq) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *NodesReq) GetClientIP() string {
	if m != nil {
		return m.ClientIP
	}
	return ""
}

type NodesReply struct {
	Domain               string   `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain"`
	TcpPort              int32    `protobuf:"varint,2,opt,name=tcpPort,proto3" json:"tcp_port"`
	WsPort               int32    `protobuf:"varint,3,opt,name=wsPort,proto3" json:"ws_port"`
	WssPort              int32    `protobuf:"varint,4,opt,name=wssPort,proto3" json:"wss_port"`
	Heartbeat            int32    `protobuf:"varint,5,opt,name=heartbeat,proto3" json:"heartbeat"`
	Nodes                []string `protobuf:"bytes,6,rep,name=nodes,proto3" json:"nodes"`
	Backoff              *Backoff `protobuf:"bytes,7,opt,name=backoff,proto3" json:"backoff"`
	HeartbeatMax         int32    `protobuf:"varint,8,opt,name=heartbeatMax,proto3" json:"heartbeat_max"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodesReply) Reset()         { *m = NodesReply{} }
func (m *NodesReply) String() string { return proto.CompactTextString(m) }
func (*NodesReply) ProtoMessage()    {}
func (*NodesReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{16}
}
func (m *NodesReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodesReply.Unmarshal(m, b)
}
func (m *NodesReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodesReply.Marshal(b, m, deterministic)
}
func (m *NodesReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodesReply.Merge(m, src)
}
func (m *NodesReply) XXX_Size() int {
	return xxx_messageInfo_NodesReply.Size(m)
}
func (m *NodesReply) XXX_DiscardUnknown() {
	xxx_messageInfo_NodesReply.DiscardUnknown(m)
}

var xxx_messageInfo_NodesReply proto.InternalMessageInfo

func (m *NodesReply) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *NodesReply) GetTcpPort() int32 {
	if m != nil {
		return m.TcpPort
	}
	return 0
}

func (m *NodesReply) GetWsPort() int32 {
	if m != nil {
		return m.WsPort
	}
	return 0
}

func (m *NodesReply) GetWssPort() int32 {
	if m != nil {
		return m.WssPort
	}
	return 0
}

func (m *NodesReply) GetHeartbeat() int32 {
	if m != nil {
		return m.Heartbeat
	}
	return 0
}

func (m *NodesReply) GetNodes() []string {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *NodesReply) GetBackoff() *Backoff {
	if m != nil {
		return m.Backoff
	}
	return nil
}

func (m *NodesReply) GetHeartbeatMax() int32 {
	if m != nil {
		return m.HeartbeatMax
	}
	return 0
}

type Backoff struct {
	MaxDelay             int32    `protobuf:"varint,1,opt,name=MaxDelay,proto3" json:"max_delay"`
	BaseDelay            int32    `protobuf:"varint,2,opt,name=BaseDelay,proto3" json:"base_delay"`
	Factor               float32  `protobuf:"fixed32,3,opt,name=Factor,proto3" json:"factor"`
	Jitter               float32  `protobuf:"fixed32,4,opt,name=Jitter,proto3" json:"jitter"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Backoff) Reset()         { *m = Backoff{} }
func (m *Backoff) String() string { return proto.CompactTextString(m) }
func (*Backoff) ProtoMessage()    {}
func (*Backoff) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{17}
}
func (m *Backoff) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Backoff.Unmarshal(m, b)
}
func (m *Backoff) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Backoff.Marshal(b, m, deterministic)
}
func (m *Backoff) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Backoff.Merge(m, src)
}
func (m *Backoff) XXX_Size() int {
	return xxx_messageInfo_Backoff.Size(m)
}
func (m *Backoff) XXX_DiscardUnknown() {
	xxx_messageInfo_Backoff.DiscardUnknown(m)
}

var xxx_messageInfo_Backoff proto.InternalMessageInfo

func (m *Backoff) GetMaxDelay() int32 {
	if m != nil {
		return m.MaxDelay
	}
	return 0
}

func (m *Backoff) GetBaseDelay() int32 {
	if m != nil {
		return m.BaseDelay
	}
	return 0
}

func (m *Backoff) GetFactor() float32 {
	if m != nil {
		return m.Factor
	}
	return 0
}

func (m *Backoff) GetJitter() float32 {
	if m != nil {
		return m.Jitter
	}
	return 0
}

func init() {
	proto.RegisterEnum("goim.logic.PushMsgType", PushMsgType_name, PushMsgType_value)
	proto.RegisterType((*PushMsg)(nil), "goim.logic.PushMsg")
	proto.RegisterType((*CloseReply)(nil), "goim.logic.CloseReply")
	proto.RegisterType((*CloseReq)(nil), "goim.logic.CloseReq")
	proto.RegisterType((*PingReply)(nil), "goim.logic.PingReply")
	proto.RegisterType((*PingReq)(nil), "goim.logic.PingReq")
	proto.RegisterType((*ConnectReq)(nil), "goim.logic.ConnectReq")
	proto.RegisterType((*ConnectReply)(nil), "goim.logic.ConnectReply")
	proto.RegisterType((*DisconnectReq)(nil), "goim.logic.DisconnectReq")
	proto.RegisterType((*DisconnectReply)(nil), "goim.logic.DisconnectReply")
	proto.RegisterType((*HeartbeatReq)(nil), "goim.logic.HeartbeatReq")
	proto.RegisterType((*HeartbeatReply)(nil), "goim.logic.HeartbeatReply")
	proto.RegisterType((*OnlineReq)(nil), "goim.logic.OnlineReq")
	proto.RegisterMapType((map[string]int32)(nil), "goim.logic.OnlineReq.RoomCountEntry")
	proto.RegisterType((*OnlineReply)(nil), "goim.logic.OnlineReply")
	proto.RegisterMapType((map[string]int32)(nil), "goim.logic.OnlineReply.AllRoomCountEntry")
	proto.RegisterType((*ReceiveReq)(nil), "goim.logic.ReceiveReq")
	proto.RegisterType((*ReceiveReply)(nil), "goim.logic.ReceiveReply")
	proto.RegisterType((*NodesReq)(nil), "goim.logic.NodesReq")
	proto.RegisterType((*NodesReply)(nil), "goim.logic.NodesReply")
	proto.RegisterType((*Backoff)(nil), "goim.logic.Backoff")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 1049 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0x5b, 0x6f, 0xe3, 0x44,
	0x14, 0x5e, 0xe7, 0xee, 0x93, 0xb4, 0xb4, 0x43, 0xb7, 0x6b, 0x0c, 0x52, 0x22, 0x2f, 0x82, 0x2c,
	0xcb, 0x26, 0x28, 0x68, 0x05, 0x2a, 0x20, 0x54, 0xb7, 0xc0, 0xee, 0x42, 0x69, 0x34, 0xbb, 0x48,
	0x88, 0x97, 0x6a, 0xe2, 0x4c, 0x53, 0x13, 0xc7, 0xe3, 0xda, 0xd3, 0x4b, 0x78, 0xe4, 0x57, 0xf0,
	0x88, 0xc4, 0x1b, 0xfc, 0x05, 0x7e, 0x4b, 0x1e, 0x79, 0x08, 0x7f, 0x02, 0xcd, 0xc5, 0x37, 0xb6,
	0x45, 0x08, 0x9e, 0x72, 0x2e, 0xdf, 0x7c, 0x73, 0xce, 0x99, 0xf1, 0x37, 0x01, 0x93, 0x44, 0xfe,
	0x20, 0x8a, 0x19, 0x67, 0x08, 0x66, 0xcc, 0x5f, 0x0c, 0x02, 0x36, 0xf3, 0x3d, 0xfb, 0x83, 0x99,
	0xcf, 0xcf, 0x2e, 0x26, 0x03, 0x8f, 0x2d, 0x86, 0x3f, 0x9c, 0xcf, 0x67, 0x6c, 0x28, 0x92, 0x8f,
	0x68, 0x78, 0x46, 0x42, 0x8f, 0x4e, 0x87, 0x24, 0xf2, 0x87, 0x1e, 0x5b, 0x50, 0x3e, 0x9c, 0xc5,
	0x91, 0x37, 0xcc, 0x48, 0xec, 0x47, 0x85, 0x85, 0x33, 0x36, 0x63, 0x43, 0x19, 0x9e, 0x5c, 0x9c,
	0x4a, 0x4f, 0x3a, 0xd2, 0x52, 0x70, 0xe7, 0x77, 0x03, 0x9a, 0xe3, 0x8b, 0xe4, 0xec, 0x28, 0x99,
	0xa1, 0x87, 0x50, 0xe3, 0xcb, 0x88, 0x5a, 0x46, 0xcf, 0xe8, 0x6f, 0x8e, 0xee, 0x0d, 0xf2, 0x72,
	0x06, 0x1a, 0xf2, 0x62, 0x19, 0x51, 0x2c, 0x41, 0xe8, 0x0d, 0x30, 0x59, 0x44, 0x63, 0xc2, 0x7d,
	0x16, 0x5a, 0x95, 0x9e, 0xd1, 0xaf, 0xe3, 0x3c, 0x80, 0x76, 0xa0, 0x9e, 0x44, 0x94, 0x4e, 0xad,
	0xaa, 0xcc, 0x28, 0x07, 0xed, 0x42, 0x23, 0xa1, 0xf1, 0x25, 0x8d, 0xad, 0x5a, 0xcf, 0xe8, 0x9b,
	0x58, 0x7b, 0x08, 0x41, 0x2d, 0x66, 0x6c, 0x61, 0xd5, 0x65, 0x54, 0xda, 0x22, 0x36, 0xa7, 0xcb,
	0xc4, 0x6a, 0xf4, 0xaa, 0x22, 0x26, 0x6c, 0xb4, 0x05, 0xd5, 0x45, 0x32, 0xb3, 0x9a, 0x3d, 0xa3,
	0xdf, 0xc1, 0xc2, 0x74, 0x3a, 0x00, 0x07, 0x01, 0x4b, 0x28, 0xa6, 0x51, 0xb0, 0x74, 0x00, 0x5a,
	0xda, 0x3b, 0x77, 0xda, 0x60, 0x8e, 0xfd, 0x70, 0xa6, 0x12, 0x26, 0x34, 0x95, 0x73, 0xee, 0x7c,
	0x0b, 0x70, 0xc0, 0xc2, 0x90, 0x7a, 0x1c, 0xd3, 0xf3, 0x42, 0x45, 0x46, 0xa9, 0xa2, 0x5d, 0x68,
	0x78, 0x8c, 0xcd, 0x7d, 0x2a, 0x5b, 0x33, 0xb1, 0xf6, 0x44, 0x5f, 0x9c, 0xcd, 0x69, 0x28, 0xfb,
	0xea, 0x60, 0xe5, 0xec, 0xd5, 0x7e, 0xfa, 0xb9, 0x7b, 0xc7, 0xf9, 0xd1, 0x80, 0x4e, 0x46, 0x1d,
	0x05, 0x4b, 0x59, 0xae, 0x3f, 0x95, 0xcc, 0x55, 0x2c, 0x4c, 0x11, 0x99, 0xd3, 0xa5, 0xe6, 0x14,
	0xa6, 0xd8, 0x48, 0xb4, 0xfb, 0xf4, 0x50, 0x32, 0x9a, 0x58, 0x7b, 0xc8, 0x82, 0x26, 0xf1, 0x3c,
	0x1a, 0xf1, 0xc4, 0xaa, 0xf5, 0xaa, 0xfd, 0x3a, 0x4e, 0x5d, 0x31, 0xf8, 0x33, 0x4a, 0x62, 0x3e,
	0xa1, 0x84, 0xcb, 0x89, 0x55, 0x71, 0x1e, 0x70, 0xbe, 0x84, 0x8d, 0x43, 0x3f, 0xf1, 0xf2, 0x0e,
	0xff, 0x65, 0x11, 0x7a, 0x0a, 0xd5, 0xe2, 0x14, 0x9c, 0xfb, 0xf0, 0x4a, 0x91, 0x4c, 0xf7, 0x74,
	0x46, 0x12, 0x49, 0xd7, 0xc2, 0xc2, 0x74, 0x9e, 0x41, 0xe7, 0x49, 0xba, 0xfd, 0xff, 0xdd, 0x70,
	0x0b, 0x36, 0x0b, 0x5c, 0xe2, 0xe4, 0x7e, 0x33, 0xc0, 0x3c, 0x0e, 0x03, 0x3f, 0xa4, 0xff, 0x74,
	0x5c, 0x2e, 0x98, 0x62, 0x6e, 0x07, 0xec, 0x22, 0xe4, 0x56, 0xa5, 0x57, 0xed, 0xb7, 0x47, 0x6f,
	0x16, 0xaf, 0x6f, 0xc6, 0x30, 0xc0, 0x29, 0xec, 0xb3, 0x90, 0xc7, 0x4b, 0x9c, 0x2f, 0xb3, 0x3f,
	0x86, 0xcd, 0x72, 0x32, 0xad, 0xdb, 0xc8, 0xeb, 0xde, 0x81, 0xfa, 0x25, 0x09, 0x2e, 0xa8, 0xbe,
	0xf0, 0xca, 0xd9, 0xab, 0x7c, 0x68, 0xe8, 0x2b, 0xf0, 0x8b, 0x01, 0xed, 0x74, 0x2f, 0x31, 0xad,
	0x23, 0xe8, 0x90, 0x20, 0xc8, 0x68, 0x2d, 0x43, 0x96, 0xf6, 0xe0, 0xa6, 0xd2, 0xa2, 0x60, 0x39,
	0xd8, 0x2f, 0x60, 0x55, 0x7d, 0xa5, 0xe5, 0xf6, 0xa7, 0xb0, 0xfd, 0x12, 0xe4, 0x3f, 0x54, 0xf9,
	0x05, 0x00, 0xa6, 0x1e, 0xf5, 0x2f, 0xe9, 0xcd, 0xe7, 0xf5, 0x36, 0xd4, 0xa5, 0x38, 0xc8, 0xf5,
	0xed, 0xd1, 0xb6, 0x2a, 0x57, 0xaa, 0xcd, 0x60, 0x2c, 0x12, 0x58, 0xe5, 0x9d, 0x4d, 0xe8, 0x64,
	0x44, 0xe2, 0xb0, 0x5c, 0x68, 0x7d, 0xcd, 0xa6, 0x34, 0x11, 0xb4, 0x36, 0xb4, 0xa2, 0x80, 0xf0,
	0x53, 0x16, 0x2f, 0x74, 0x6d, 0x99, 0x2f, 0x72, 0x5e, 0xe0, 0xd3, 0x90, 0x3f, 0x1d, 0xeb, 0x5b,
	0x91, 0xf9, 0xce, 0x1f, 0x15, 0x00, 0x4d, 0x22, 0x26, 0xe8, 0x40, 0x63, 0xca, 0x16, 0xc4, 0x0f,
	0x15, 0x89, 0x0b, 0xeb, 0x55, 0x57, 0x47, 0xb0, 0xfe, 0x45, 0x6f, 0x41, 0x93, 0x7b, 0xd1, 0x98,
	0xc5, 0x5c, 0x75, 0xec, 0x76, 0xd6, 0xab, 0x6e, 0x8b, 0x7b, 0xd1, 0x49, 0xc4, 0x62, 0x8e, 0xd3,
	0x24, 0xba, 0x0f, 0x8d, 0xab, 0x44, 0xc2, 0xa4, 0x2a, 0xb9, 0xed, 0xf5, 0xaa, 0xdb, 0xbc, 0x4a,
	0x14, 0x4a, 0xa7, 0x04, 0xd9, 0x55, 0xa2, 0x50, 0xb5, 0x9c, 0xec, 0x2a, 0xd1, 0xb0, 0x34, 0x89,
	0x1e, 0xfe, 0xfd, 0x33, 0xac, 0xbb, 0x1b, 0xeb, 0x55, 0x37, 0x0f, 0x16, 0xbe, 0x4a, 0xd4, 0x85,
	0x7a, 0x28, 0x7a, 0x52, 0x6a, 0xe6, 0x9a, 0xeb, 0x55, 0x57, 0x05, 0xb0, 0xfa, 0x41, 0x7b, 0xd0,
	0x9c, 0x10, 0x6f, 0xce, 0x4e, 0x4f, 0xa5, 0xba, 0xb5, 0x47, 0xaf, 0x16, 0xef, 0x88, 0xab, 0x52,
	0xaa, 0x60, 0x8d, 0xc3, 0xa9, 0x81, 0x1e, 0x43, 0x27, 0xdb, 0xe9, 0x88, 0x5c, 0x5b, 0x2d, 0x59,
	0xcc, 0xf6, 0x7a, 0xd5, 0xdd, 0xc8, 0xe2, 0x27, 0x0b, 0x72, 0x8d, 0x4b, 0x30, 0xe7, 0x57, 0x03,
	0x9a, 0x9a, 0x18, 0x3d, 0x80, 0xd6, 0x11, 0xb9, 0x3e, 0xa4, 0x01, 0x51, 0x17, 0x49, 0xf7, 0xb2,
	0x20, 0xd7, 0x27, 0x53, 0x11, 0xc4, 0x59, 0x1a, 0xbd, 0x0b, 0xa6, 0x4b, 0x12, 0xaa, 0xb0, 0x6a,
	0xdc, 0x9b, 0xeb, 0x55, 0x17, 0x26, 0x24, 0xa1, 0x1a, 0x9c, 0x03, 0xc4, 0xf1, 0x7d, 0x4e, 0x3c,
	0xce, 0xd4, 0x87, 0x5e, 0x51, 0xc7, 0x77, 0x2a, 0x23, 0x58, 0x67, 0x04, 0xe6, 0x99, 0xcf, 0xb9,
	0x7e, 0x15, 0x34, 0xe6, 0x7b, 0x19, 0xc1, 0x3a, 0xf3, 0xce, 0x7b, 0xd0, 0x2e, 0x3c, 0x41, 0xa8,
	0x05, 0xb5, 0xf1, 0x37, 0xcf, 0x9f, 0x6c, 0xdd, 0x11, 0x16, 0x3e, 0x3e, 0x3e, 0xda, 0x32, 0xd0,
	0x06, 0x98, 0x2e, 0x3e, 0xde, 0x3f, 0x3c, 0xd8, 0x7f, 0xfe, 0x62, 0xab, 0x32, 0xfa, 0xb3, 0x0a,
	0xf5, 0xaf, 0xc4, 0xf4, 0xd0, 0x08, 0x6a, 0x42, 0xfc, 0x51, 0x69, 0xa4, 0xfa, 0x39, 0xb0, 0xef,
	0xbe, 0x1c, 0x14, 0xd7, 0xee, 0x31, 0xd4, 0xe5, 0x4b, 0x82, 0x76, 0x8a, 0xf9, 0xf4, 0x71, 0xb1,
	0x77, 0x6f, 0x88, 0x8a, 0x65, 0x1f, 0x41, 0x53, 0xbf, 0x00, 0xa8, 0x0c, 0xc9, 0xf4, 0xd8, 0xb6,
	0x6e, 0x8c, 0x8b, 0xc5, 0x87, 0x00, 0xb9, 0xda, 0xa2, 0xd7, 0x8a, 0xb8, 0x92, 0xa4, 0xdb, 0xaf,
	0xdf, 0x96, 0x12, 0x2c, 0xfb, 0x60, 0x66, 0x12, 0x8a, 0x4a, 0x9b, 0x15, 0x55, 0xda, 0xb6, 0x6f,
	0xc9, 0x08, 0x8a, 0x4f, 0xa0, 0x8d, 0x69, 0x48, 0xaf, 0x94, 0x34, 0xa1, 0xbb, 0x37, 0x2a, 0xa9,
	0x7d, 0xef, 0x16, 0x15, 0x13, 0x43, 0xd0, 0xaa, 0x50, 0x1e, 0x42, 0xae, 0x39, 0xe5, 0x21, 0x14,
	0x25, 0x44, 0x0c, 0x5e, 0x7e, 0xfd, 0xe5, 0xc1, 0xa7, 0xaa, 0x52, 0x1e, 0x7c, 0x2e, 0x13, 0x6e,
	0xe3, 0xbb, 0x9a, 0xf8, 0x1f, 0x34, 0x69, 0x48, 0x61, 0x7a, 0xff, 0xaf, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xd7, 0x37, 0xa3, 0x7f, 0x56, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc1.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc1.SupportPackageIsVersion4

// LogicClient is the client API for Logic service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LogicClient interface {
	// Ping Service
	Ping(ctx context.Context, in *PingReq, opts ...grpc1.CallOption) (*PingReply, error)
	// Close Service
	Close(ctx context.Context, in *CloseReq, opts ...grpc1.CallOption) (*CloseReply, error)
	// Connect
	Connect(ctx context.Context, in *ConnectReq, opts ...grpc1.CallOption) (*ConnectReply, error)
	// Disconnect
	Disconnect(ctx context.Context, in *DisconnectReq, opts ...grpc1.CallOption) (*DisconnectReply, error)
	// Heartbeat
	Heartbeat(ctx context.Context, in *HeartbeatReq, opts ...grpc1.CallOption) (*HeartbeatReply, error)
	// RenewOnline
	RenewOnline(ctx context.Context, in *OnlineReq, opts ...grpc1.CallOption) (*OnlineReply, error)
	// Receive
	Receive(ctx context.Context, in *ReceiveReq, opts ...grpc1.CallOption) (*ReceiveReply, error)
	//ServerList
	Nodes(ctx context.Context, in *NodesReq, opts ...grpc1.CallOption) (*NodesReply, error)
}

type logicClient struct {
	cc *grpc1.ClientConn
}

func NewLogicClient(cc *grpc1.ClientConn) LogicClient {
	return &logicClient{cc}
}

func (c *logicClient) Ping(ctx context.Context, in *PingReq, opts ...grpc1.CallOption) (*PingReply, error) {
	out := new(PingReply)
	err := c.cc.Invoke(ctx, "/goim.logic.Logic/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicClient) Close(ctx context.Context, in *CloseReq, opts ...grpc1.CallOption) (*CloseReply, error) {
	out := new(CloseReply)
	err := c.cc.Invoke(ctx, "/goim.logic.Logic/Close", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicClient) Connect(ctx context.Context, in *ConnectReq, opts ...grpc1.CallOption) (*ConnectReply, error) {
	out := new(ConnectReply)
	err := c.cc.Invoke(ctx, "/goim.logic.Logic/Connect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicClient) Disconnect(ctx context.Context, in *DisconnectReq, opts ...grpc1.CallOption) (*DisconnectReply, error) {
	out := new(DisconnectReply)
	err := c.cc.Invoke(ctx, "/goim.logic.Logic/Disconnect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicClient) Heartbeat(ctx context.Context, in *HeartbeatReq, opts ...grpc1.CallOption) (*HeartbeatReply, error) {
	out := new(HeartbeatReply)
	err := c.cc.Invoke(ctx, "/goim.logic.Logic/Heartbeat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicClient) RenewOnline(ctx context.Context, in *OnlineReq, opts ...grpc1.CallOption) (*OnlineReply, error) {
	out := new(OnlineReply)
	err := c.cc.Invoke(ctx, "/goim.logic.Logic/RenewOnline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicClient) Receive(ctx context.Context, in *ReceiveReq, opts ...grpc1.CallOption) (*ReceiveReply, error) {
	out := new(ReceiveReply)
	err := c.cc.Invoke(ctx, "/goim.logic.Logic/Receive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicClient) Nodes(ctx context.Context, in *NodesReq, opts ...grpc1.CallOption) (*NodesReply, error) {
	out := new(NodesReply)
	err := c.cc.Invoke(ctx, "/goim.logic.Logic/Nodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LogicServer is the server API for Logic service.
type LogicServer interface {
	// Ping Service
	Ping(context.Context, *PingReq) (*PingReply, error)
	// Close Service
	Close(context.Context, *CloseReq) (*CloseReply, error)
	// Connect
	Connect(context.Context, *ConnectReq) (*ConnectReply, error)
	// Disconnect
	Disconnect(context.Context, *DisconnectReq) (*DisconnectReply, error)
	// Heartbeat
	Heartbeat(context.Context, *HeartbeatReq) (*HeartbeatReply, error)
	// RenewOnline
	RenewOnline(context.Context, *OnlineReq) (*OnlineReply, error)
	// Receive
	Receive(context.Context, *ReceiveReq) (*ReceiveReply, error)
	//ServerList
	Nodes(context.Context, *NodesReq) (*NodesReply, error)
}

// UnimplementedLogicServer can be embedded to have forward compatible implementations.
type UnimplementedLogicServer struct {
}

func (*UnimplementedLogicServer) Ping(ctx context.Context, req *PingReq) (*PingReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedLogicServer) Close(ctx context.Context, req *CloseReq) (*CloseReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Close not implemented")
}
func (*UnimplementedLogicServer) Connect(ctx context.Context, req *ConnectReq) (*ConnectReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connect not implemented")
}
func (*UnimplementedLogicServer) Disconnect(ctx context.Context, req *DisconnectReq) (*DisconnectReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Disconnect not implemented")
}
func (*UnimplementedLogicServer) Heartbeat(ctx context.Context, req *HeartbeatReq) (*HeartbeatReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Heartbeat not implemented")
}
func (*UnimplementedLogicServer) RenewOnline(ctx context.Context, req *OnlineReq) (*OnlineReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RenewOnline not implemented")
}
func (*UnimplementedLogicServer) Receive(ctx context.Context, req *ReceiveReq) (*ReceiveReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Receive not implemented")
}
func (*UnimplementedLogicServer) Nodes(ctx context.Context, req *NodesReq) (*NodesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Nodes not implemented")
}

func RegisterLogicServer(s *grpc1.Server, srv LogicServer) {
	s.RegisterService(&_Logic_serviceDesc, srv)
}

func _Logic_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServer).Ping(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/goim.logic.Logic/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServer).Ping(ctx, req.(*PingReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Logic_Close_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServer).Close(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/goim.logic.Logic/Close",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServer).Close(ctx, req.(*CloseReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Logic_Connect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServer).Connect(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/goim.logic.Logic/Connect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServer).Connect(ctx, req.(*ConnectReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Logic_Disconnect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisconnectReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServer).Disconnect(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/goim.logic.Logic/Disconnect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServer).Disconnect(ctx, req.(*DisconnectReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Logic_Heartbeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(HeartbeatReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServer).Heartbeat(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/goim.logic.Logic/Heartbeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServer).Heartbeat(ctx, req.(*HeartbeatReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Logic_RenewOnline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(OnlineReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServer).RenewOnline(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/goim.logic.Logic/RenewOnline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServer).RenewOnline(ctx, req.(*OnlineReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Logic_Receive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReceiveReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServer).Receive(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/goim.logic.Logic/Receive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServer).Receive(ctx, req.(*ReceiveReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Logic_Nodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServer).Nodes(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/goim.logic.Logic/Nodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServer).Nodes(ctx, req.(*NodesReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Logic_serviceDesc = grpc1.ServiceDesc{
	ServiceName: "goim.logic.Logic",
	HandlerType: (*LogicServer)(nil),
	Methods: []grpc1.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _Logic_Ping_Handler,
		},
		{
			MethodName: "Close",
			Handler:    _Logic_Close_Handler,
		},
		{
			MethodName: "Connect",
			Handler:    _Logic_Connect_Handler,
		},
		{
			MethodName: "Disconnect",
			Handler:    _Logic_Disconnect_Handler,
		},
		{
			MethodName: "Heartbeat",
			Handler:    _Logic_Heartbeat_Handler,
		},
		{
			MethodName: "RenewOnline",
			Handler:    _Logic_RenewOnline_Handler,
		},
		{
			MethodName: "Receive",
			Handler:    _Logic_Receive_Handler,
		},
		{
			MethodName: "Nodes",
			Handler:    _Logic_Nodes_Handler,
		},
	},
	Streams:  []grpc1.StreamDesc{},
	Metadata: "api.proto",
}
